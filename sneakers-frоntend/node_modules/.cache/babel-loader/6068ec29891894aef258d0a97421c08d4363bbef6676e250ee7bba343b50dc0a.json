{"ast":null,"code":"import axios from \"../axios\";\nexport default (_ref => {\n  let {\n    values,\n    errors\n  } = _ref;\n  const rules = {\n    name: (errors, values) => {\n      if (values.name === '') {\n        errors.name = 'Пожалуйста заполните это поле';\n      }\n    },\n    surname: (errors, values) => {\n      if (values.surname === '') {\n        errors.surname = 'Пожалуйста заполните это поле';\n      }\n    },\n    login: async (errors, values) => {\n      if (values.login === '') {\n        errors.login = 'Пожалуйста заполните это поле';\n      }\n      const validLogin = await axios.post('/auth/checkLogin', {\n        login: values.login\n      });\n      if (validLogin.data) {}\n      console.log(validLogin);\n      // errors.login = validLogin.response.data.message\n    },\n\n    password: (errors, values) => {\n      if (values.password === '') {\n        errors.password = 'Пожалуйста заполните это поле';\n      } else if (!/(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}/i.test(values.password)) {\n        errors.password = 'Слишком легкий пароль';\n      }\n    },\n    confirmation: (errors, values) => {\n      if (values.confirmation === '') {\n        errors.confirmation = 'Пожалуйста заполните это поле';\n      } else if (values.password !== values.confirmation) {\n        errors.confirmation = 'Пароли не совпадают';\n        errors.password = 'Пароли не совпадают';\n      }\n    }\n  };\n  Object.keys(values).forEach(key => rules[key] && rules[key](errors, values));\n  console.log(errors);\n  return errors;\n});","map":{"version":3,"names":["axios","_ref","values","errors","rules","name","surname","login","validLogin","post","data","console","log","password","test","confirmation","Object","keys","forEach","key"],"sources":["D:/Projects/Sneakers/sneakers-frоntend/src/utils/validateForm.js"],"sourcesContent":["import axios from \"../axios\"\r\n\r\nexport default ({ values, errors }) => {\r\n    const rules = {\r\n        name: (errors, values) => {\r\n            if (values.name === '') {\r\n                errors.name = 'Пожалуйста заполните это поле'\r\n            }\r\n        },\r\n        surname: (errors, values) => {\r\n            if (values.surname === '') {\r\n                errors.surname = 'Пожалуйста заполните это поле'\r\n            }\r\n        },\r\n        login: async (errors, values) => {\r\n            if (values.login === '') {\r\n                errors.login = 'Пожалуйста заполните это поле'\r\n            }\r\n            const validLogin = await axios.post('/auth/checkLogin', { login: values.login })\r\n            if (validLogin.data) {\r\n\r\n            }\r\n            console.log(validLogin)\r\n            // errors.login = validLogin.response.data.message\r\n        },\r\n        password: (errors, values) => {\r\n            if (values.password === '') {\r\n                errors.password = 'Пожалуйста заполните это поле'\r\n            } else if (!/(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}/i.test(values.password)) {\r\n                errors.password = 'Слишком легкий пароль'\r\n            }\r\n        },\r\n        confirmation: (errors, values) => {\r\n            if (values.confirmation === '') {\r\n                errors.confirmation = 'Пожалуйста заполните это поле'\r\n            } else if (values.password !== values.confirmation) {\r\n                errors.confirmation = 'Пароли не совпадают'\r\n                errors.password = 'Пароли не совпадают'\r\n            }\r\n        }\r\n    }\r\n\r\n    Object.keys(values).forEach(\r\n        key => rules[key] && rules[key](errors, values)\r\n    )\r\n    console.log(errors)\r\n\r\n    return errors\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,UAAU;AAE5B,gBAAeC,IAAA,IAAwB;EAAA,IAAvB;IAAEC,MAAM;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC9B,MAAMG,KAAK,GAAG;IACVC,IAAI,EAAEA,CAACF,MAAM,EAAED,MAAM,KAAK;MACtB,IAAIA,MAAM,CAACG,IAAI,KAAK,EAAE,EAAE;QACpBF,MAAM,CAACE,IAAI,GAAG,+BAA+B;MACjD;IACJ,CAAC;IACDC,OAAO,EAAEA,CAACH,MAAM,EAAED,MAAM,KAAK;MACzB,IAAIA,MAAM,CAACI,OAAO,KAAK,EAAE,EAAE;QACvBH,MAAM,CAACG,OAAO,GAAG,+BAA+B;MACpD;IACJ,CAAC;IACDC,KAAK,EAAE,MAAAA,CAAOJ,MAAM,EAAED,MAAM,KAAK;MAC7B,IAAIA,MAAM,CAACK,KAAK,KAAK,EAAE,EAAE;QACrBJ,MAAM,CAACI,KAAK,GAAG,+BAA+B;MAClD;MACA,MAAMC,UAAU,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,kBAAkB,EAAE;QAAEF,KAAK,EAAEL,MAAM,CAACK;MAAM,CAAC,CAAC;MAChF,IAAIC,UAAU,CAACE,IAAI,EAAE,CAErB;MACAC,OAAO,CAACC,GAAG,CAACJ,UAAU,CAAC;MACvB;IACJ,CAAC;;IACDK,QAAQ,EAAEA,CAACV,MAAM,EAAED,MAAM,KAAK;MAC1B,IAAIA,MAAM,CAACW,QAAQ,KAAK,EAAE,EAAE;QACxBV,MAAM,CAACU,QAAQ,GAAG,+BAA+B;MACrD,CAAC,MAAM,IAAI,CAAC,mDAAmD,CAACC,IAAI,CAACZ,MAAM,CAACW,QAAQ,CAAC,EAAE;QACnFV,MAAM,CAACU,QAAQ,GAAG,uBAAuB;MAC7C;IACJ,CAAC;IACDE,YAAY,EAAEA,CAACZ,MAAM,EAAED,MAAM,KAAK;MAC9B,IAAIA,MAAM,CAACa,YAAY,KAAK,EAAE,EAAE;QAC5BZ,MAAM,CAACY,YAAY,GAAG,+BAA+B;MACzD,CAAC,MAAM,IAAIb,MAAM,CAACW,QAAQ,KAAKX,MAAM,CAACa,YAAY,EAAE;QAChDZ,MAAM,CAACY,YAAY,GAAG,qBAAqB;QAC3CZ,MAAM,CAACU,QAAQ,GAAG,qBAAqB;MAC3C;IACJ;EACJ,CAAC;EAEDG,MAAM,CAACC,IAAI,CAACf,MAAM,CAAC,CAACgB,OAAO,CACvBC,GAAG,IAAIf,KAAK,CAACe,GAAG,CAAC,IAAIf,KAAK,CAACe,GAAG,CAAC,CAAChB,MAAM,EAAED,MAAM,CAAC,CAClD;EACDS,OAAO,CAACC,GAAG,CAACT,MAAM,CAAC;EAEnB,OAAOA,MAAM;AACjB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}