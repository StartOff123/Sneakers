{"ast":null,"code":"export default (_ref => {\n  let {\n    values,\n    errors\n  } = _ref;\n  const rules = {\n    email: (errors, values) => {\n      if (values.email === '') {\n        errors.email = 'Пожалуйста заполните это поле';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Неверный формат почты';\n      }\n    },\n    password: (errors, values) => {\n      if (values.password === '') {\n        errors.password = 'Пожалуйста заполните это поле';\n      } else if (!/(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}/i.test(values.password)) {\n        errors.password = 'Слишком легкий пароль';\n      }\n    },\n    username: (errors, values) => {\n      if (values.username === '') {\n        errors.username = 'Пожалуйста заполните это поле';\n      }\n    },\n    confirmation: (errors, values) => {\n      if (values.confirmation === '') {\n        errors.confirmation = 'Пожалуйста заполните это поле';\n      } else if (values.password !== values.confirmation) {\n        errors.confirmation = 'Пароли не совпадают';\n        errors.password = 'Пароли не совпадают';\n      }\n    }\n  };\n  Object.keys(values).forEach(key => rules[key] && rules[key](errors, values));\n});","map":{"version":3,"names":["_ref","values","errors","rules","email","test","password","username","confirmation","Object","keys","forEach","key"],"sources":["D:/Projects/Sneakers/sneakers-frоntend/src/utils/validateForm.js"],"sourcesContent":["export default ({ values, errors }) => {\r\n    const rules = {\r\n        email: (errors, values) => {\r\n            if (values.email === '') {\r\n                errors.email = 'Пожалуйста заполните это поле'\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Неверный формат почты'\r\n            }\r\n        },\r\n        password : (errors, values) => { \r\n            if (values.password === '') {\r\n                errors.password = 'Пожалуйста заполните это поле'\r\n            } else if (!/(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}/i.test(values.password)) {\r\n                errors.password = 'Слишком легкий пароль'\r\n            }\r\n        }, \r\n        username: (errors, values) => {\r\n            if (values.username === '') {\r\n                errors.username = 'Пожалуйста заполните это поле'\r\n            }\r\n        },\r\n        confirmation: (errors, values) => {\r\n            if (values.confirmation === '') {\r\n                errors.confirmation = 'Пожалуйста заполните это поле'\r\n            } else if (values.password !== values.confirmation) {\r\n                errors.confirmation = 'Пароли не совпадают'\r\n                errors.password = 'Пароли не совпадают'\r\n            }   \r\n        }\r\n    }\r\n\r\n    Object.keys(values).forEach(\r\n        key => rules[key] && rules[key](errors, values)\r\n    )\r\n}"],"mappings":"AAAA,gBAAeA,IAAA,IAAwB;EAAA,IAAvB;IAAEC,MAAM;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC9B,MAAMG,KAAK,GAAG;IACVC,KAAK,EAAEA,CAACF,MAAM,EAAED,MAAM,KAAK;MACvB,IAAIA,MAAM,CAACG,KAAK,KAAK,EAAE,EAAE;QACrBF,MAAM,CAACE,KAAK,GAAG,+BAA+B;MAClD,CAAC,MAAM,IAAI,CAAC,2CAA2C,CAACC,IAAI,CAACJ,MAAM,CAACG,KAAK,CAAC,EAAE;QACxEF,MAAM,CAACE,KAAK,GAAG,uBAAuB;MAC1C;IACJ,CAAC;IACDE,QAAQ,EAAGA,CAACJ,MAAM,EAAED,MAAM,KAAK;MAC3B,IAAIA,MAAM,CAACK,QAAQ,KAAK,EAAE,EAAE;QACxBJ,MAAM,CAACI,QAAQ,GAAG,+BAA+B;MACrD,CAAC,MAAM,IAAI,CAAC,mDAAmD,CAACD,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,EAAE;QACnFJ,MAAM,CAACI,QAAQ,GAAG,uBAAuB;MAC7C;IACJ,CAAC;IACDC,QAAQ,EAAEA,CAACL,MAAM,EAAED,MAAM,KAAK;MAC1B,IAAIA,MAAM,CAACM,QAAQ,KAAK,EAAE,EAAE;QACxBL,MAAM,CAACK,QAAQ,GAAG,+BAA+B;MACrD;IACJ,CAAC;IACDC,YAAY,EAAEA,CAACN,MAAM,EAAED,MAAM,KAAK;MAC9B,IAAIA,MAAM,CAACO,YAAY,KAAK,EAAE,EAAE;QAC5BN,MAAM,CAACM,YAAY,GAAG,+BAA+B;MACzD,CAAC,MAAM,IAAIP,MAAM,CAACK,QAAQ,KAAKL,MAAM,CAACO,YAAY,EAAE;QAChDN,MAAM,CAACM,YAAY,GAAG,qBAAqB;QAC3CN,MAAM,CAACI,QAAQ,GAAG,qBAAqB;MAC3C;IACJ;EACJ,CAAC;EAEDG,MAAM,CAACC,IAAI,CAACT,MAAM,CAAC,CAACU,OAAO,CACvBC,GAAG,IAAIT,KAAK,CAACS,GAAG,CAAC,IAAIT,KAAK,CAACS,GAAG,CAAC,CAACV,MAAM,EAAED,MAAM,CAAC,CAClD;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}