{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../../axios';\nexport const fetchAllBookmarks = createAsyncThunk('card/fetchAllBookmarks', async () => {\n  try {\n    const {\n      data\n    } = await axios.get('/user/allbookmarks');\n    return data;\n  } catch (error) {\n    throw error.response.data;\n  }\n});\nconst initialState = {\n  bookmarksItems: null,\n  status: 'loading',\n  error: null\n};\nconst bookmarksSlice = createSlice({\n  name: 'Cart',\n  initialState,\n  reducers: {\n    setAddCardBookmarks: (state, action) => {\n      state.bookmarksItems ? state.bookmarksItems.push({\n        ...action.payload\n      }) : state.bookmarksItems = new Array(action.payload);\n    },\n    setRemoveCardBookmarks: (state, actios) => {\n      const newBookmarksItems = state.bookmarksItems.filter(item => item._id !== actios.payload);\n      state.bookmarksItems = newBookmarksItems.length === 0 ? null : newBookmarksItems;\n    }\n  },\n  extraReducers: bilding => {\n    bilding.addCase(fetchAllBookmarks.fulfilled, (state, action) => {\n      state.bookmarksItems = action.payload.length === 0 ? null : action.payload;\n      state.status = 'loaded';\n      state.error = null;\n    }).addCase(fetchAllBookmarks.pending, state => {\n      state.bookmarksItems = null;\n      state.status = 'loading';\n      state.error = null;\n    }).addCase(fetchAllBookmarks.rejected, (state, action) => {\n      state.bookmarksItems = null;\n      state.status = 'error';\n      state.error = action.error;\n    });\n  }\n});\nexport const {\n  setRemoveCard,\n  setAddCardBookmarks\n} = bookmarksSlice.actions;\nexport default bookmarksSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchAllBookmarks","data","get","error","response","initialState","bookmarksItems","status","bookmarksSlice","name","reducers","setAddCardBookmarks","state","action","push","payload","Array","setRemoveCardBookmarks","actios","newBookmarksItems","filter","item","_id","length","extraReducers","bilding","addCase","fulfilled","pending","rejected","setRemoveCard","actions","reducer"],"sources":["D:/Projects/Sneakers/sneakers-frÐ¾ntend/src/redux/slices/Bookmarks.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\n\r\nimport axios from '../../axios'\r\n\r\nexport const fetchAllBookmarks = createAsyncThunk('card/fetchAllBookmarks', async () => {\r\n    try {\r\n        const { data } = await axios.get('/user/allbookmarks')\r\n        return data\r\n    } catch (error) {\r\n        throw error.response.data\r\n    }\r\n})\r\n\r\nconst initialState = {\r\n    bookmarksItems: null,\r\n    status: 'loading',\r\n    error: null,\r\n}\r\n\r\nconst bookmarksSlice = createSlice({\r\n    name: 'Cart',\r\n    initialState,\r\n    reducers: {\r\n        setAddCardBookmarks: (state, action) => {\r\n            state.bookmarksItems ? state.bookmarksItems.push({ ...action.payload }) : state.bookmarksItems = new Array(action.payload)\r\n        },\r\n        setRemoveCardBookmarks: (state, actios) => {\r\n            const newBookmarksItems = state.bookmarksItems.filter(item => item._id !== actios.payload)\r\n            state.bookmarksItems = newBookmarksItems.length === 0 ? null : newBookmarksItems\r\n        }\r\n    },\r\n    extraReducers: (bilding) => {\r\n        bilding\r\n            .addCase(fetchAllBookmarks.fulfilled, (state, action) => {\r\n                state.bookmarksItems = action.payload.length === 0 ? null : action.payload\r\n                state.status = 'loaded'\r\n                state.error = null\r\n            })\r\n            .addCase(fetchAllBookmarks.pending, (state) => {\r\n                state.bookmarksItems = null\r\n                state.status = 'loading'\r\n                state.error = null\r\n            })\r\n            .addCase(fetchAllBookmarks.rejected, (state, action) => {\r\n                state.bookmarksItems = null\r\n                state.status = 'error'\r\n                state.error = action.error\r\n            })\r\n    }\r\n})\r\n\r\nexport const { setRemoveCard, setAddCardBookmarks } = bookmarksSlice.actions\r\nexport default bookmarksSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAOC,KAAK,MAAM,aAAa;AAE/B,OAAO,MAAMC,iBAAiB,GAAGF,gBAAgB,CAAC,wBAAwB,EAAE,YAAY;EACpF,IAAI;IACA,MAAM;MAAEG;IAAK,CAAC,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,oBAAoB,CAAC;IACtD,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACC,QAAQ,CAACH,IAAI;EAC7B;AACJ,CAAC,CAAC;AAEF,MAAMI,YAAY,GAAG;EACjBC,cAAc,EAAE,IAAI;EACpBC,MAAM,EAAE,SAAS;EACjBJ,KAAK,EAAE;AACX,CAAC;AAED,MAAMK,cAAc,GAAGX,WAAW,CAAC;EAC/BY,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACNC,mBAAmB,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACpCD,KAAK,CAACN,cAAc,GAAGM,KAAK,CAACN,cAAc,CAACQ,IAAI,CAAC;QAAE,GAAGD,MAAM,CAACE;MAAQ,CAAC,CAAC,GAAGH,KAAK,CAACN,cAAc,GAAG,IAAIU,KAAK,CAACH,MAAM,CAACE,OAAO,CAAC;IAC9H,CAAC;IACDE,sBAAsB,EAAEA,CAACL,KAAK,EAAEM,MAAM,KAAK;MACvC,MAAMC,iBAAiB,GAAGP,KAAK,CAACN,cAAc,CAACc,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAKJ,MAAM,CAACH,OAAO,CAAC;MAC1FH,KAAK,CAACN,cAAc,GAAGa,iBAAiB,CAACI,MAAM,KAAK,CAAC,GAAG,IAAI,GAAGJ,iBAAiB;IACpF;EACJ,CAAC;EACDK,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAAC1B,iBAAiB,CAAC2B,SAAS,EAAE,CAACf,KAAK,EAAEC,MAAM,KAAK;MACrDD,KAAK,CAACN,cAAc,GAAGO,MAAM,CAACE,OAAO,CAACQ,MAAM,KAAK,CAAC,GAAG,IAAI,GAAGV,MAAM,CAACE,OAAO;MAC1EH,KAAK,CAACL,MAAM,GAAG,QAAQ;MACvBK,KAAK,CAACT,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC,CACDuB,OAAO,CAAC1B,iBAAiB,CAAC4B,OAAO,EAAGhB,KAAK,IAAK;MAC3CA,KAAK,CAACN,cAAc,GAAG,IAAI;MAC3BM,KAAK,CAACL,MAAM,GAAG,SAAS;MACxBK,KAAK,CAACT,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC,CACDuB,OAAO,CAAC1B,iBAAiB,CAAC6B,QAAQ,EAAE,CAACjB,KAAK,EAAEC,MAAM,KAAK;MACpDD,KAAK,CAACN,cAAc,GAAG,IAAI;MAC3BM,KAAK,CAACL,MAAM,GAAG,OAAO;MACtBK,KAAK,CAACT,KAAK,GAAGU,MAAM,CAACV,KAAK;IAC9B,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAE2B,aAAa;EAAEnB;AAAoB,CAAC,GAAGH,cAAc,CAACuB,OAAO;AAC5E,eAAevB,cAAc,CAACwB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}